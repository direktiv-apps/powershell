swagger: "2.0"
info:
  description: Microsoft Powershell Environment
  title: powershell
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/powershell
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/powershell/issues
    url: https://github.com/direktiv-apps/powershell  
    categories:
    - development
    - build
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This function has Powershell 7.2.6 installed plus the following plugins:

      - powershell-yaml

      - PSWriteHTML
      
      - Az
      
      - Posh-SSH


      For executing remote commands remoting has to be enabled on the target host. The following is an example of those settings. The `TrustedHosts` set to * is just for testing and should be
      more specific in production scenarios.


      `Enable-PSRemoting -Force`
  
  
      `Set-Item WSMan:\localhost\Client\TrustedHosts -Force -Value *`
  
  
      `Set-Service WinRM -StartMode Automatic`
  

      `Restart-Service -Force WinRM`


      Additionaly the firewall needs to be changed to allow traffic to the target host. In Direktiv it is recommended to set the attribute `size` to `large` because of a 
      bigger memory consumption of Powershell.
      
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
                default: []
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
                default: 
                - command: echo Hello
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: powershell
          image: gcr.io/direktiv/functions/powershell:1.0
          type: knative-workflow
          size: large
      x-direktiv-examples:
        - title: Run small script directly
          content: |-
            - id: powershell 
              type: action
              action:
                function: powershell
                files:
                - key: script.ps1
                  scope: workflow
                input: 
                  files:
                  - name: script.ps1
                    data: |
                      Get-ChildItem . | Select Name | ConvertTo-Json 
                  commands:
                  - command: pwsh script.ps1
        - title: Run file
          content: |-
            - id: powershell 
              type: action
              action:
                function: powershell
                files:
                - key: script.ps1
                  scope: workflow
                input: 
                  commands:
                  - command: pwsh script.ps1
      x-direktiv:  
        cmds:
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
        output: |
          {
            "powershell": {{ index . 0 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed Powershell commands.
          examples:
            powershell:
              result:
              - Name: file1.txt
              - Name: file2.txt
              success: true
          schema:
            type: object
            properties:
              powershell:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
